x
class(x)
y <- as.numeric(x)
y
class(y)
z <- as.logical(x)
z
class(z)
a <- as.character(x)
a
class(a)
b <- as.complex(x)
b
class(b)
x <- c("a", "b", "c")
x
y <- as.numeric(x)
y
x <- c("0", "1", "2")
x
y <- as.numeric(x)
y
x <- c("a", "b", "c")
x
z <- as.logical(x)
z
is.vector(x)
voti <- c(5,7,6,7)
names(voti) <- c("matematica", "latino", "storia", "inglese")
voti ["latino"]
voti <- c(5,7,6,7)
y <- c("matematica", "latino", "storia", "inglese")
names(voti) <- y
voti ["latino"]
voti[c("latino","storia")]
x <- c("a", "b", "c")
l <- length(x)
x <- c("a", "b", "c")
l <- length(x)
l
s <- sort(x)
s
x <- c("a", "d", "b", "c")
s <- sort(x)
s
sd <- sort(x, decreasing = T)
sd
x <- c(1,2,3,4.5,-6)
somma <- sum(x)
somma
prodotto <- prod(x)
prodotto
a <- any(x<0)
a
minimo <- min(x) # minimo
minimo
massimo <- max (x) # massimo
massimo
media <- mean(x) # media
media
varianza <- var(x) # varianza
varianza
deviazione <- sd(x) # deviazione standard
deviazione
r <- range (x) # valore minimo e valore massimo
r
statistiche <- summary(x) # principali statistiche
statistiche
NA > 5
NA + 10
NA > 5
NA + 10
NA/2
NA == NA
vt <- c(NA,1,2,3,4.5,-6,NA)
controllo <- is.na(vt)
controllo
y < na.omit(vt)
y
y <- na.omit(vt)
y
vt <- c(NA,1,2,3,4.5,-6,NA)
controllo <- is.na(vt) # restituisce TRUE dove c'è' un NA, altrimenti FALSE
controllo
y <- na.omit(vt)
y
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
df
# Nardbe koje slijede sa izvrsavaju samo pri ukljucivanju paketa i biblioteka
#install.packages("dplyr")
#library(dplyr)
#library(ggplot2)
okvir1 <- read_excel("Faza01-objedinjeno.xlsx")
#View(okvir1)
okvir2 <- filter(okvir1, !is.na( pozitivni ) )
View(okvir2)
dt <- table(okvir2[c("POL")])
dt
df <- as.data.frame(dt)
df
# Barplot
bp<- ggplot(df, aes(x="", y=Freq, fill=Var1))+
geom_bar(width = 1, stat = "identity")
bp <- bp + labs(x = NULL, y = NULL, fill = "Pol", title = "Pol")
bp
# Pita
pie <- bp + coord_polar("y", start=0)
pie <- pie + labs(x = NULL, y = NULL, fill = "Pol", title = "Pol")
pie
# Nardbe koje slijede sa izvrsavaju samo pri ukljucivanju paketa i biblioteka
#install.packages("dplyr")
library(dplyr)
library(ggplot2)
okvir1 <- read_excel("Faza01-objedinjeno.xlsx")
#View(okvir1)
okvir2 <- filter(okvir1, !is.na( pozitivni ) )
View(okvir2)
dt <- table(okvir2[c("POL")])
dt
df <- as.data.frame(dt)
df
# Barplot
bp<- ggplot(df, aes(x="", y=Freq, fill=Var1))+
geom_bar(width = 1, stat = "identity")
bp <- bp + labs(x = NULL, y = NULL, fill = "Pol", title = "Pol")
bp
# Pita
pie <- bp + coord_polar("y", start=0)
pie <- pie + labs(x = NULL, y = NULL, fill = "Pol", title = "Pol")
pie
library(ggplot2)
# Nardbe koje slijede sa izvrsavaju samo pri ukljucivanju paketa i biblioteka
install.packages("dplyr")
library(dplyr)
library(ggplot2)
okvir1 <- read_excel("Faza01-objedinjeno.xlsx")
#View(okvir1)
okvir2 <- filter(okvir1, !is.na( pozitivni ) )
View(okvir2)
dt <- table(okvir2[c("POL")])
dt
df <- as.data.frame(dt)
df
# Barplot
bp<- ggplot(df, aes(x="", y=Freq, fill=Var1))+
geom_bar(width = 1, stat = "identity")
bp <- bp + labs(x = NULL, y = NULL, fill = "Pol", title = "Pol")
bp
# Pita
pie <- bp + coord_polar("y", start=0)
pie <- pie + labs(x = NULL, y = NULL, fill = "Pol", title = "Pol")
pie
install.packages("dplyr")
library("dbplyr", lib.loc="~/R/win-library/3.4")
library("ggplot2", lib.loc="~/R/win-library/3.4")
okvir1 <- read_excel("Faza01-objedinjeno.xlsx")
library("readxl", lib.loc="~/R/win-library/3.4")
dt <- table(okvir2[c("POL")])
# Nardbe koje slijede sa izvrsavaju samo pri ukljucivanju paketa i biblioteka
#install.packages("dplyr")
#library(dplyr)
#library(ggplot2)
okvir1 <- read_excel("Faza01-objedinjeno.xlsx")
#View(okvir1)
okvir2 <- filter(okvir1, !is.na( pozitivni ) )
View(okvir2)
dt <- table(okvir2[c("POL")])
dt
df <- as.data.frame(dt)
df
# Barplot
bp<- ggplot(df, aes(x="", y=Freq, fill=Var1))+
geom_bar(width = 1, stat = "identity")
bp <- bp + labs(x = NULL, y = NULL, fill = "Pol", title = "Pol")
bp
# Pita
pie <- bp + coord_polar("y", start=0)
pie <- pie + labs(x = NULL, y = NULL, fill = "Pol", title = "Pol")
pie
okvir1 <- read_excel("Faza01-objedinjeno.xlsx")
#View(okvir1)
okvir2 <- filter(okvir1, !is.na( pozitivni ) )
View(okvir2)
a <- c(TRUE, FALSE, TRUE)
b <- c(-1L, 0L, 1L)
c <- c(-1, 0, 1)
d <- c(-1 + 1i, 2i, 3)
e <- c("Matteo", "Marco", "Maurizio")
a <- c(TRUE, FALSE, TRUE)
b <- c(-1L, 0L, 1L)
c <- c(-1, 0, 1)
d <- c(-1 + 1i, 2i, 3)
e <- c("Matteo", "Marco", "Maurizio")
class(a)
class(b)
class(c)
class(d)
class(e)
a <- c(Matteo = 1, Mario = 2, Marco = 4, Manlio = 8)
a
a[2]
a[2] <- -2
a <- c(Matteo = 1, Mario = 2, Marco = 4, Manlio = 8)
a
a[2] <- -2
a[2] <- -2
a[2]
a <- c(Matteo = 1, Mario = 2, Marco = 4, Manlio = 8)
a
a[2]
a[2] <- -2
a[2]
a[c(1, 3)]
a[2:4]
a
a[c(FALSE, TRUE, FALSE, TRUE)]
a[a > 4]
a
a[c("Matteo", "Manlio")]
a[c("Matteo", "Manlio")] <- a[c("Mario", "Marco")] + a[c("Matteo", "Manlio")]
a[c("Matteo", "Manlio")]
setwd("~/_Sanja/Bicocca - studio/Data Science/IntroductionToR/DS_R")
a <- 1:4 # vettore di interi da 1 a 4
b <- 2:5 # vettore di interi da 2 a 5
x <- a + b
x
a <- 1:4 # vettore di interi da 1 a 4
a
b <- 2:5 # vettore di interi da 2 a 5
b
x <- a + b
x
y <- a*b
y
z <- a - b
z
d <- a/b
d
e <- a^b
e
m <- a < b
m
a <- 1:2
a
b <- 10:13
b
x <- a + b
x
a <- 1:2
a
b <- 10:12
b
x <- a + b
x
a <- 1:2
a
b <- 10:15
b
x <- a + b
x
y <- b < 12
y
a <- as.character(1:5)
a
b <- c("1", "10", "100")
b
b <- c("1", "10", "100")
b
c <- as.integer(b)
c
d <- c("uno", "dieci", "cento")
d
e <- as.integer(d)
e
b <- c( "Ana", 23, "Djordje", 35, TRUE)
b
n <- length(b)
n
eq()
a <- seq (0,1, by = 0.2)
a
a <- seq (0,10)
a
is.na()
b <- c ("Ana", 23, NA, "Djordje", 35, TRUE, NaN)
b
d <- is.na(b)
d
s.numeric(), is.character(), is.logical(), ...
n <- is.numeric(b)
n
n <- is.numeric(b)
n
n <- is.vector(b)
n
a <- c(2,4,8,6,0)
a
x <- mean(a)
x
a <- c(2,4,NaN,8,6,0)
a
x <- mean(a)
x
a <- c(2,4,NA,8,6,0)
a
x <- mean(a)
x
sum()
x <- sum(a)
x
a <- c(2,4,8,6,0)
x <- sum(a)
x
a <- c(2,4,8,6,0)
a
x <- sum(a)
x
a <- c(2,4,8,6,0)
a
x <- cumsum(a)
x
sort()
a <- c(2,4,NaN,8,6,0)
a
x < sort(a)
x
a <- c(2,4,NaN,8,6,0)
a
x <- sort(a)
x
a <- c(2,4,NA,8,6,0)
a
x <- sort(a, na.last = TRUE)
x
a <- c(2,4,NA,8,6,0)
a
x <- sort(a)
x
x <- sort(a, na.last = TRUE)
x
a <- c(2,4,NA,8,6,0)
a
x <- sort(a)
x
x <- sort(a, na.last = TRUE)
x
x <- sort (a, na.last = FALSE)
sort()
a <- c(2,4,NA,8,6,0)
a
x <- sort(a)
x
x <- sort(a, na.last = TRUE)
x
x <- sort (a, na.last = FALSE)
x
x <- sort (a, decreasing = TRUE)
x
a <- c(2,4,8,6,0)
a
x <- cumsum(a)
x
a <- c(2,4,8,6,0)
a
x <- rank(a)
x
a <- c(-2,4,8,-6,0)
d <- a<0
e <- ifelse(d,3,-2)
e
a <- c(-2,4,8,-6,0)
a
d <- a<0
d
e <- ifelse(d,3,-2)
e
e <- ifelse(d,"negativo",-2)
e
a <- 1:6
a
A <- matrix(a, nrow = 2, ncol = 3) # costruttore della matrice
A
A <- matrix(1:6, 2, 3, dimnames = list(c("I", "II"), c("A", "B", "C")))
A
a <- 1:6
a
A <- matrix(a, nrow = 2, ncol = 3) # costruttore della matrice
A
dimnames(A) <- list(c("I", "II"), c("A", "B", "C"))
A
B <- matrix(1:6, 2, 3)
rownames(B) <- c("a", "b")
colnames(B) <- c("A", "B", "C")
B
(cioè numero di righe moltiplicato per numero di colonne).
A <- matrix(1:3, 2, 3) # anche qui funziona il principio del riciclo
A
d <- dim(A)
d
r <- nrow(A)
r
c <- ncol(A)
c
l <- length(A)
l
A <- matrix(1:6, 2, 3)
rownames(A) <- c("I", "II")
colnames(A) <- c("A", "B", "C")
A
x <- A["I", "A"]
x
y <- A [1,1]
y
z <- A["II", c("A", "C")]
z
A[2,2]<- 7
A
n <- A[1, 1:2]
n
x1 <- A[1:2, c(1, 3)]
x1
A <- matrix(1:6, 2, 3)
rownames(A) <- c("I", "II")
colnames(A) <- c("A", "B", "C")
A
l <- A[c(TRUE, FALSE), c(FALSE, TRUE, TRUE)]
l
l1 <- A[, 1] > 1
l1
r1 <- A[l1, ]
r1
c1 <- A[, 1] # restituisce un vector
c1
A <- matrix(1:6, 2, 3)
c1 <- A[, 1] # restituisce un vector
c1
A <- matrix(1:6, 2, 3)
A
c1 <- A[, 1] # restituisce un vector
c1
m1 <-A[, 1, drop = FALSE] # restituisce una matrix drop = FALSE
m1
A <- matrix(1:4, 2, 2)
B <- matrix(c(-10, -1, 1, 10), 2, 2)
A
B
C <- A * B
C
A <- matrix(1:4, 3, 2)
B <- matrix(c(-10, -1, 1, 10), 2, 2)
A
B
C1 <- A * B
C1
A <- matrix(1:4, 2, 2)
B <- matrix(c(-10, -1, 1, 10), 2, 2)
A <- matrix(1:4, 2, 2)
B <- matrix(c(-10, -1, 1, 10), 2, 2)
A
B
L <- A >= B
L
A <- matrix(1:4, 2, 2)
A
x <-  c(0,1,8,2)
x
d <- A - x
d
A <- matrix(1:4, 2, 2)
A
x <-  c(0,1)
x
d <- A - x
d
A <- matrix(1:4, 2, 2)
A
x <-  c(0,1,2)
x
d  <- A-x
d
A <- matrix(1:4, 2, 2)
A
x <-  c(0,1,2,3,4,5)
x
d  <- A-x
d
A <- matrix(1:4, 2, 2)
A
x <-  c(0,1,2)
x
d  <- A-x
d
A <- matrix(1:4, 2, 2)
A
b <- (1:2)
b
M <- A*b
M
A <- matrix(1:4, 2, 2)
A
A <- matrix(1:4, 2, 2)
A
Inversa <- solve(A)
Inversa
Prodotto <- A %*% Inversa
Prodotto
Trasposta <- t(A)
Trasposta
rm (list = ls()) # uklanja sve objekte iz environment
library() # izlista sve instalirane pakete ukljucene u radni prostor
